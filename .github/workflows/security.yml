name: Security Scanning

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM UTC
  workflow_dispatch:

jobs:
  # Python Security Analysis
  python-security:
    name: Python Security Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Security Tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety
        
    - name: Install Dependencies
      run: |
        if [ -f requirements.txt ]; then 
          pip install -r requirements.txt || true
        fi
        
    - name: Run Bandit Security Scan
      continue-on-error: true
      run: |
        bandit -r . --exclude ./venv,./env,./.venv,./.git,./node_modules -f txt || true
        
    - name: Check for Known Vulnerabilities
      continue-on-error: true
      run: |
        safety check || true

  # Docker Security Analysis
  docker-security:
    name: Docker Security Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      
    - name: Build Docker Image
      run: |
        docker build -t space-intelligence:security-test . || true
        
    - name: Run Trivy Container Scan
      uses: aquasecurity/trivy-action@master
      continue-on-error: true
      with:
        image-ref: 'space-intelligence:security-test'
        format: 'table'
        exit-code: '0'

  # License Compliance Check
  license-check:
    name: License Compliance
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Check Licenses
      continue-on-error: true
      run: |
        pip install pip-licenses
        pip install -r requirements.txt || true
        pip-licenses --format=plain-vertical || true

  # Security Summary
  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [python-security, docker-security, license-check]
    if: always()
    
    steps:
    - name: Security Summary
      run: |
        echo "## Security Scan Summary"
        echo "**Scan Date:** $(date)"
        echo "**Repository:** ${{ github.repository }}"
        echo "**Commit:** ${{ github.sha }}"
        echo ""
        echo "Security scans completed successfully."
        echo "Check individual job results for detailed findings."