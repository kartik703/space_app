# 🔍 Space Data Monitoring Workflow
# Monitors data freshness and system health

name: Space Data Monitoring

on:
  schedule:
    # Check data freshness every hour
    - cron: '0 * * * *'
  workflow_dispatch:

jobs:
  monitor_data_freshness:
    name: 🕐 Monitor Data Freshness
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests pandas numpy
        
    - name: 🔍 Check data freshness
      run: |
        python -c "
        import json
        import os
        from datetime import datetime, timedelta
        from glob import glob
        
        print('🔍 Checking data freshness...')
        
        current_time = datetime.now()
        alerts = []
        
        # Check if data files exist and are recent
        if os.path.exists('data/live'):
            metadata_files = glob('data/live/*_metadata.json')
            
            for file in metadata_files:
                if os.path.exists(file):
                    with open(file, 'r') as f:
                        data = json.load(f)
                        
                    if 'timestamp' in data:
                        file_time = datetime.fromisoformat(data['timestamp'].replace('Z', ''))
                        age = current_time - file_time
                        
                        if age > timedelta(hours=2):
                            alerts.append(f'⚠️ {os.path.basename(file)}: Data is {age} old')
                        else:
                            print(f'✅ {os.path.basename(file)}: Fresh ({age} old)')
                else:
                    alerts.append(f'❌ {os.path.basename(file)}: Missing data file')
        else:
            print('📁 Data directory not found, creating...')
            os.makedirs('data/live', exist_ok=True)
        
        if alerts:
            print('🚨 DATA FRESHNESS ALERTS:')
            for alert in alerts:
                print(alert)
        else:
            print('✅ All data sources are fresh!')
        "
        
  security_scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: 🔒 Run security scan
      run: |
        pip install bandit safety
        echo "🔍 Running security scans..."
        bandit -r . -f json -o security-report.json || echo "Bandit scan completed with findings"
        safety check --json --output safety-report.json || echo "Safety scan completed"
        echo "✅ Security scans completed"
        
    - name: 📊 Upload security reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-reports
        path: |
          security-report.json
          safety-report.json
        retention-days: 30